
Project Euler Problem 371: License Plates

==============================================================================================================
Problem Statement:

Oregon licence plates consist of three letters followed by a three digit number (each digit can be
from [0..9]). While driving to work Seth plays the following game: Whenever the numbers of two licence plates
seen on his trip add to 1000 that's a win. E.g. MIC-012 and HAN-988 is a win and RYU-500 and SET-500 too
(as long as he sees them in the same trip).

Find the expected number of plates he needs to see for a win. Give your answer rounded to 8 decimal places
behind the decimal point.

Note: We assume that each licence plate seen is equally likely to have any three digit number on it.

==============================================================================================================
Notes:

Total number of unique plates 
   = 26*26*26*1000 
   = 17576000

Total number of different pairs (2-combinations) 
   = C(17576000, 2)
   = 154457879212000

Number of possible winning pairs:
??????????????????????






   = (number of possible first plates)*(number of letter combos) - (number of self-match at 500)
   = (17576000.0 * 17576.0 - 17576.0)/2.0

existing-pairs/winning-pairs
= 154457879212000.0 / ((17576000.0 * 17576.0)/2.0 - 17576.0)
= 1000.000056895773429195884068716894483033

But since he can compare each plate he sees to all of the plates
he's seen so far on this trip, he only needs to see about 46 cars,
because comb(46,2)=1035. How do we make that more exact, so that
comb(x,2)=1000.00005689577?

