Euler Project Problem 37: Truncatable Primes

The number 3797 has an interesting property. Being prime itself, 
it is possible to continuously remove digits from left to right, 
and remain prime at each stage: 3797, 797, 97, and 7. Similarly 
we can work from right to left: 3797, 379, 37, and 3.

Find the sum of the only eleven primes that are both truncatable 
from left to right and right to left.

NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.

RH Analysis: All prime numbers have decimal representations which
do not end with 0 or 5 (=> divisible by 5) or 2, 4, 5, 6, or 8
(=> divisible by 2). In other words, they end with 1, 3, 7, or 9.

Hence, a right-truncatable (in decimal) prime must have a decimal
representation consisting only of the digits 1,3,7,9. And this
must also be true of doubly-truncatable primes (though not 
necessarily left-truncatable primes). 

One approach that suggests itself is a constructionist approach.
Start with all 2-digit RTP candidates (2-digit numbers containing
only 1,3,7,9). See which are RTPs. All 3-digit RTPs must decay to
one of these on stripping their right digits, hence all 3-digit
RTPs can be constructing by tacking a right digit to a 2-digit RTP,
etc. That should allow easily finding all RTPs.

Then just check which RTPs are LTPs.

(The reverse could also be done: find all LTPs first, then determine
which are also RTPs; but there are many more LTPs than RTPs, so that
approach would take MUCH longer.)

Theorem: Every n+1 digit RTP has as its left n digits an n-digit RTP.
Proof:   If not so, it wouldn't be an RTP, as RTPs need to be
         right-truncatable (while remaining prime) all the way down 
			to their left digit.

Theorem: Any number made by tacking a digit to the right of an RTP,
         if it is prime, is an RTP itself.
Proof:   If removing the right digit of a prime produces an RTP,
         then the prime itself is an RTP by definition.
			
Plan of action:
1. Find all possible 2-digit RTPs by visual inspection, as there are
   only 21 2-digit primes to begin with.
2. for ( n = 2 ;  ; ++n )
   {
	   Construct all possible n+1 digit RTP from n digit RTPs,
		until we reach an n such that there are NO n+1 digit RTPs.
   }
3. Check all RTPs for LTPness, and sum the resulting DTPs.

