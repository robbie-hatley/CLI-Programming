Euler-057_Square-Root-Convergents.txt

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Problem Statement:

It is possible to show that the square root of two can be expressed as an 
infinite continued fraction.

âˆš 2 = 1 + 1/(2 + 1/(2 + 1/(2 + ... ))) = 1.414213...

By expanding this for the first four iterations, we get:

1 + 1/2 = 3/2 = 1.5
1 + 1/(2 + 1/2) = 7/5 = 1.4
1 + 1/(2 + 1/(2 + 1/2)) = 17/12 = 1.41666...
1 + 1/(2 + 1/(2 + 1/(2 + 1/2))) = 41/29 = 1.41379...

The next three expansions are 99/70, 239/169, and 577/408, but the eighth
expansion, 1393/985, is the first example where the number of digits in the
numerator exceeds the number of digits in the denominator.

In the first one-thousand expansions, how many fractions contain a numerator
with more digits than denominator?

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Problem Analysis:

I think the first thing we need is a recurrence formula for the continued 
fraction. Some research turns this up:
p(n)=p(n-1)+2q(n-1)
q(n)=p(n-1)+q(n-1)
where p(n)/q(n) is the nth term of the sequence of partial continued fractions.

unsigned  i      = 0;
uint64_t  p1     = 1;
uint64_t  q1     = 2;
unsigned  count  = 0;

for ( i = 2 ; i <= 1000 ; ++i )
{
   p2 = p1 + 2*q1;
   q2 = p1 +   q1;
   if (NumberOfDigits(p2) > NumberOfDigits(q2)
	{
	   ++Count;
   }
	p1=p2;
	q1=q2;
}

HOWEVER, to make this work, I'll need to use GMP.

